# Both files are read, but if the same property is defined in both, the one in application.properties takes
# precedence over the one in application.yaml. This is because application.properties is loaded later in the
# sequence, overriding the earlier application.yaml values.

spring.application.name=kafka-producer-service

# Spring boot app starts on random port number and does not have conflict ports as we set it to 0
# server.port=0
server.port=8080

spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# logging.level.org.apache.kafka=DEBUG
logging.level.com.pmp.kafka_producer_service.service=DEBUG